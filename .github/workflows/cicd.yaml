name: ci/cd

on:
  push:
    branches: [main]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ./bin/make ci
        env:
          TERM: vt100

  deploy:
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ./bin/make deploy
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EVY_LANG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./bin/make e2e
        env:
          BASEURL: ${{ env.BASEURL_APEX }}

  release:
    runs-on: ubuntu-latest
    needs: [ci, deploy]
    if: ${{ github.event_name == 'push' }} # only run on push to main
    environment: prod
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ./bin/make release
        env:
          GITHUB_APP_ID: ${{ secrets.EVYLANGBOT_GITHUB_APP_ID }}
          GITHUB_APP_PEM: ${{ secrets.EVYLANGBOT_GITHUB_APP_PEM }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./bin/make deploy-prod
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EVY_LANG }}
      - run: ./bin/make e2e
        env:
          BASEURL: ${{ env.BASEURL_APEX }}

  howl-on-fail:
    runs-on: ubuntu-latest
    needs: [ci, release]
    if: ${{ always() && github.event_name == 'push' && ( needs.ci.result == 'failure' ||  needs.release.result == 'failure' ) }}
    steps:
      - uses: foxygoat/howl@v1
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_TEXT: <!here|here>
