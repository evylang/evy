// Return a string containing space-delimited numbers starting from 0 up to n inclusive.
// stringSequence 0 // "0"
// stringSequence 5 // "0 1 2 3 4 5"
func stringSequence:string n:num
    str := "0"
    for x := range n
        str = sprintf "%s %v" str x+1
    end
    return str
end

func test
    assert "0" (stringSequence 0)
    assert "0 1 2 3" (stringSequence 3)
    assert "0 1 2 3 4 5 6 7 8 9 10" (stringSequence 10)
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult
