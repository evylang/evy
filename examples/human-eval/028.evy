// Concatenate list of strings into a single string
// concatenate []  // ""
// concatenate ["a" "b" "c"] "abc"
func concatenate:string strings:[]string
    return (join strings "")
end

func test
    assert "" (concatenate [])
    assert "xyz" (concatenate ["x" "y" "z"])
    assert "xyzwk" (concatenate ["x" "y" "z" "w" "k"])
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult

