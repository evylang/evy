// Filter an input list of strings only for ones that start with a given prefix.
// filterByPrefix [] "a" // []
// filterByPrefix ["abc" "bcd" "cde" "array"] "a"  // ["abc" "array"]
func filterByPrefix:[]string strings:[]string prefix:string
    result:[]string
    for s := range strings
        if startswith s prefix
            result = result + [s]
        end
    end
    return result
end

func test
    assert [] (filterByPrefix [] "john")
    assert ["xxx" "xxxAAA" "xxx"] (filterByPrefix ["xxx" "asd" "xxy" "john doe" "xxxAAA" "xxx"] "xxx")
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult

