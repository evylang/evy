// Return maximum element in the list.
// max_element([1 2 3]) // 3
// max_element([5 3 -5 2 -3 3 9 0 123 1 -10]) // 123
func max_element:num nums:[]num
    result := nums[0]
    for n := range nums[1:]
        if result < n
            result = n
        end
    end
    return result
end

func test
    assert 3 (max_element [1 2 3])
    assert 124 (max_element [5 3 -5 2 -3 3 9 0 124 1 -10])
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult

