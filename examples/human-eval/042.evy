//"Return list with elements incremented by 1.
// inc [1 2 3] // [2 3 4]
// inc [5 3 5 2 3 3 9 0 123] // [6 4 6 3 4 4 10 1 124]
func inc:[]num nums:[]num
    result := nums[:]
    for i := range (len result)
        result[i] = result[i] + 1
    end
    return result
end

func test
    assert [] (inc [])
    assert [4 3 2] (inc [3 2 1])
    assert [6 3 6 3 4 4 10 1 124] (inc [5 2 5 2 3 3 9 0 123])
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult
