// Given length of a side and high return area for a triangle.
// triangleArea 5 3 // 7.5
func triangleArea:num s:num h:num
    return s * h / 2

end

func test
    assert 7.5 (triangleArea 5 3)
    assert 2 (triangleArea 2 2)
    assert 40 (triangleArea 10 8)
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult
