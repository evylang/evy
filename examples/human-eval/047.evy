// Return median of elements in the list l.
// median [3 1 2 4 5] // 3
// median [-10 4 6 1000 10 20] // 15
func median:num nums:[]num
    length := len nums
    if length == 0
        return -1
    end
    result := nums[:]
    sort result
    if length % 2 == 1
        return result[floor length/2]
    else
        return (result[length / 2 - 1] + result[length / 2]) / 2
    end
end

func sort arr:[]num
    // bubble sort
    for endIdx := range (len arr)-1 0 -1
        for i := range endIdx
            if arr[i] > arr[i + 1]
                tmp := arr[i]
                arr[i] = arr[i + 1]
                arr[i + 1] = tmp
            end
        end
    end
end

func test
    assert 3 (median [3 1 2 4 5])
    assert 8 (median [-10 4 6 1000 10 20])
    assert 5 (median [5])
    assert 5.5 (median [6 5])
    assert 7 (median [8 1 3 9 9 2 7])
end

test
