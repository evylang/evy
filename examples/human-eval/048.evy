// Checks if given string is a palindrome
// isPalindrome "" // true
// isPalindrome "aba" // true
// isPalindrome "aaaaa" // true
// isPalindrome "zbcd" // false
func isPalindrome:bool str:string
    length := len str
    for i := range (floor length/2)
        if str[i] != str[-(i + 1)]
            return false
        end
    end
    return true
end

func test
    assert true (isPalindrome "")
    assert true (isPalindrome "aba")
    assert true (isPalindrome "aaaaa")
    assert false (isPalindrome "zbcd")
    assert true (isPalindrome "xywyx")
    assert false (isPalindrome "xywyz")
    assert false (isPalindrome "xywzx")
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult
