// Return 2^n modulo p. (careful with overflow!)
// modp 3 5 // 3
// modp 1101 101 // 2
// modp 0 101 // 1
// modp 3 11 // 8
// modp 100 101 // 1
func modpn:num n:num p:num
    result := 1
    for range n
        result = (2 * result) % p
    end
    return result
end

func test
    assert 3 (modpn 3 5)
    assert 2 (modpn 1101 101)
    assert 1 (modpn 0 101)
    assert 8 (modpn 3 11)
    assert 1 (modpn 100 101)
    assert 4 (modpn 30 5)
    assert 3 (modpn 31 5)
end

test
