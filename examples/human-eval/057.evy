// Return true if list elements are monotonically increasing or decreasing.
// monotonic [1 2 4 20] // true
// monotonic [1 20 4 10] // false
// monotonic [4 1 0 -10] // true
func monotonic:bool nums:[]num
    numsInc := nums[:]
    numsDec := nums[:]
    sort numsInc true
    sort numsDec false
    return nums == numsInc or nums == numsDec
end

func sort arr:[]num inc:bool
    // bubble sort
    for endIdx := range (len arr)-1 0 -1
        for i := range endIdx
            if (inc and arr[i] > arr[i + 1]) or (!inc and arr[i] < arr[i + 1])
                tmp := arr[i]
                arr[i] = arr[i + 1]
                arr[i + 1] = tmp
            end
        end
    end
end

func testAll
    test true (monotonic [1 2 4 10])
    test true (monotonic [1 2 4 20])
    test false (monotonic [1 20 4 10])
    test true (monotonic [4 1 0 -10])
    test true (monotonic [4 1 1 0])
    test false (monotonic [1 2 3 2 5 60])
    test true (monotonic [1 2 3 4 5 60])
    test true (monotonic [9 9 9 9])
end

testAll
