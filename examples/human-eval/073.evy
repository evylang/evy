//  Given an array arr of integers, find the minimum number of elements that
//  need to be changed to make the array palindromic. A palindromic array is
//  an array that is read the same backwards and forwards. In one change, you
//  can change one element to any other element.
//
//  For example:
//  changeSize [1 2 3 5 4 7 9 6] //4
//  changeSize [1 2 3 4 3 2 2] //1
//  changeSize [1 2 3 2 1] //0
func changeSize:num nums:[]num
    result := 0
    length := len nums
    for i := range (floor length/2)
        if nums[i] != nums[-i - 1]
            result = result + 1
        end
    end
    return result
end

func test
    assert 4 (changeSize [1 2 3 5 4 7 9 6])
    assert 1 (changeSize [1 2 3 4 3 2 2])
    assert 1 (changeSize [1 4 2])
    assert 1 (changeSize [1 4 4 2])
    assert 0 (changeSize [1 2 3 2 1])
    assert 0 (changeSize [3 1 1 3])
    assert 0 (changeSize [1])
    assert 1 (changeSize [0 1])
end

test
