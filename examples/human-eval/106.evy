// Implement the function f that takes n as a parameter,
// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even
// or the sum of numbers from 1 to i otherwise.
// i starts from 1.
// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).
// Example:
// f 5 // [1 2 6 24 15]
func f:[]num n:num
    result:[]num
    sum := 0
    fact := 1
    for i := range 1 n+1
        sum = sum + i
        fact = fact * i
        if i % 2 == 0 // sum
            result = result + [fact]
        else
            result = result + [sum]
        end
    end
    return result
end

func test
    assert [1 2 6 24 15] (f 5)
    assert [1 2 6 24 15 720 28] (f 7)
    assert [1] (f 1)
    assert [1 2 6] (f 3)
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func printResult
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
printResult
