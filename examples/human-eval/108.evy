// Write a function countNums which takes an array of integers and returns
// the number of elements which has a sum of digits > 0.
// If a number is negative, then its first signed digit will be negative:
// e.g. -123 has signed digits -1, 2, and 3.
// countNums [] // 0
// countNums [-1 11 -11] // 1
// countNums [1 1 2] // 3
func countNums:num nums:[]num
    result := 0
    for n := range nums
        if n > 0
            result = result + 1
        else
            sum := digitSum n
            if sum > 0
                result = result + 1
            end
        end
    end
    return result
end

func digitSum:num n:num
    if n >= 0
        return 0
    end
    s := (sprint n)
    sum := -(str2num s[1])
    for digit := range s[2:]
        sum = sum + (str2num digit)
    end
    return sum
end

func testAll
    test 0 (countNums [])
    test 0 (countNums [-1 -2 0])
    test 6 (countNums [1 1 2 -2 3 4 5])
    test 5 (countNums [1 6 9 -6 0 1 5])
    test 4 (countNums [1 100 98 -7 1 -1])
    test 5 (countNums [12 23 34 -45 -56 0])
    test 1 (countNums [-0 1])
    test 1 (countNums [1])
end

testAll
