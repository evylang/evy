// Given an array of nums, find the minimum sum of any non-empty sub-array
// of nums.
// Example
// minSum [2 3 4 1 2 4] // 1
// minSum [-1 -2 -3] // -6
func minSum:num nums:[]num
    ms := nums[0]
    runningSum := ms

    for n := range nums[1:]
        if n < runningSum + n
            runningSum = n
        else
            runningSum = runningSum + n
        end
        if runningSum < ms
            ms = runningSum
        end
    end
    return ms
end

func testAll
    test -5 (minSum [2 3 -4 1 -2 4])
    test -7 (minSum [2 -1 1 -6 2 3 -4 1 -3 4])
    test 1 (minSum [2 3 4 1 2 4])
    test -6 (minSum [-1 -2 -3])
    test -14 (minSum [-1 -2 -3 2 -10])
    test -10000000000000000 (minSum [-10000000000000000])
    test 0 (minSum [0 10 20 1000000])
    test -6 (minSum [-1 -2 -3 10 -5])
    test -6 (minSum [100 -1 -2 -3 10 -5])
    test 3 (minSum [10 11 13 8 3 4])
    test -33 (minSum [100 -33 32 -1 0 -2])
    test -10 (minSum [-10])
    test 7 (minSum [7])
    test -1 (minSum [1 -1])
end

testAll
