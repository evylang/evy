//  Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in
//  the last couple centuries. However, what people don't know is Tribonacci sequence.
//  Tribonacci sequence is defined by the recurrence:
//  tri 1 // 3
//  tri n // 1 + n / 2, if n is even.
//  tri n //  (tri n-1) + (tri n-2) + (tri n+1), if n is odd.
//  For example:
//  tri 2 // 1 + (2 / 2) = 2
//  tri 4 // 3
//  tri 3 // (tri 2) + (tri 1) + (tri 4)
//         = 2 + 3 + 3 = 8
//  You are given a non-negative integer number n, you have to a return a list of the
//  first n + 1 numbers of the Tribonacci sequence.
//  Examples:
//  tri 3 // [1, 3, 2, 8]
func tri:[]num n:num
    result := [1 3] + [1] * (n)
    result[0] = 1
    for i := range 2 n+2 2
        result[i] = 1 + i / 2
    end
    for i := range 3 n+1 2
        result[i] = result[i - 2] + result[i - 1] + result[i + 1]
    end
    return result[:n + 1]
end

func testAll
    test [1 3 2 8] (tri 3)
    test [1 3 2 8 3] (tri 4)
    test [1 3 2 8 3 15] (tri 5)
    test [1 3 2 8 3 15 4] (tri 6)
    test [1 3 2 8 3 15 4 24] (tri 7)
    test [1 3 2 8 3 15 4 24 5] (tri 8)
    test [1 3 2 8 3 15 4 24 5 35] (tri 9)
    test [1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11] (tri 20)
    test [1] (tri 0)
    test [1 3] (tri 1)
end

testAll
