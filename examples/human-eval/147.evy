// You are given a positive integer n. You have to create an integer array a of length n.
//     For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.
//     Return the number of triples (a[i], a[j], a[k]) of a where i < j < k,
// and a[i] + a[j] + a[k] is a multiple of 3.
// Example :
//     Input: n = 5
//     Output: 1
//     Explanation:
//     a = [1 3 7 13 21]
//     The only valid triple is [1 7 13].
func triples:num n:num
    arr:[]num
    for i := range 1 n+1
        arr = arr + [i*i-i+1]
    end
    result := 0
    for i := range n
        for j := range i+1 n
            for k := range j+1 n
                if (arr[i] + arr[j] + arr[k]) % 3 == 0
                    result = result + 1
                end
            end
        end
    end
    return result
end

func testAll
    test 1 (triples 5)
    test 4 (triples 6)
    test 36 (triples 10)
    test 53361 (triples 100)
end

testAll
