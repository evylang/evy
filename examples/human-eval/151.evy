// Given an array of numbers, return the sum of squares of the numbers
// in the list that are odd. Ignore numbers that are negative or not integers.
// squareSum [1 3 2 0] // 1 + 9 + 0 + 0 = 10
// squareSum [-1 -2 0] // 0
// squareSum [9 -2] // 81
// squareSum [0] // 0
// If the input list is empty, return 0.
func squareSum:num nums:[]num
    result := 0
    for n := range nums
        if n % 2 == 1
            result = result + n * n
        end
    end
    return result
end

func testAll
    test 0 (squareSum [])
    test 25 (squareSum [5 4])
    test 0 (squareSum [0.1 0.2 0.3])
    test 0 (squareSum [-10 -20 -30])
    test 0 (squareSum [-1 -2 8])
    test 34 (squareSum [0.2 3 5])
end

testAll
