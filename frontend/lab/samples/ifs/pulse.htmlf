<h1>🧿 Pulse</h1>
<p>⭐ <strong>Your Task:</strong> Write a program that draws a small blue circle.</p>
<p><img src="samples/ifs/img/pulse-step-1.svg" alt="small centered circle" /></p>
<ul>
  <li>Background (<code>clear</code>): <code>&quot;black&quot;</code></li>
  <li>Circle outline width: <code>1</code></li>
  <li>Circle fill color: <code>&quot;none&quot;</code></li>
  <li>Circle outline color (<code>stroke</code>): <code>&quot;blue&quot;</code></li>
  <li>Initial radius: <code>1</code></li>
</ul>
<details>
  <summary>Code hint 🧚</summary>
  <pre><code class="language-evy">width ❓
clear ❓
fill ❓
stroke ❓
move 50 ❓
circle ❓
</code></pre>
</details>
<p>⭐ <strong>Enhance your program:</strong> Create this drawing of concentric circles:</p>
<p><img src="samples/ifs/img/pulse-step-2.svg" alt="small centered circle" /></p>
<ul>
  <li>Use a variable <code>r</code> for the circle radius, starting at <code>1</code>.</li>
  <li>
    Within a loop:
    <ul>
      <li>Draw the circle with radius <code>r</code>.</li>
      <li>Increase the radius <code>r</code> by <code>2</code> in each loop iteration.</li>
    </ul>
  </li>
  <li>Keep looping as long as the radius <code>r</code> is less than <code>45</code>.</li>
</ul>
<details>
  <summary>Code hint 🧚</summary>
  <pre><code class="language-evy">r := ❓
while r &lt; ❓
	circle ❓
	r = r +❓
end
</code></pre>
</details>
<p>
  ⭐ Add a <code>sleep</code> of <code>0.1</code> seconds after drawing each circle to create an
  animation.
</p>
<details>
  <summary>Animation demo</summary>
  <p><img src="samples/ifs/img/pulse-step-3.gif" alt="small centered circle" /></p>
</details>
<details>
  <summary>Code hint 🧚</summary>
  <pre><code class="language-evy">while r &lt; __
	circle __
	r = r + __
	sleep ❓
end
</code></pre>
</details>
<p>⭐ Now, at the beginning of each loop iteration, add a nearly transparent black overlay.</p>
<p>Use <code>clear</code> with <code>hsl 0 0 0 15</code> to achieve the fading effect.</p>
<details>
  <summary>Animation demo</summary>
  <p><img src="samples/ifs/img/pulse-step-4.gif" alt="small centered circle" /></p>
</details>
<details>
  <summary>Code hint 🧚</summary>
  <pre><code class="language-evy">while r &lt; __
	clear (hsl ❓)
	circle __
	r = r + __
	sleep __
end
</code></pre>
</details>
<p>⭐ Make the animation smoother.</p>
<p>Reduce the loop increment, sleep duration, and alpha value.</p>
<details>
  <summary>Animation demo</summary>
  <p><img src="samples/ifs/img/pulse-step-5.gif" alt="small centered circle" /></p>
</details>
<details>
  <summary>Code hint 🧚</summary>
  <ul>
    <li>increment: r = r + 0.1</li>
    <li>sleep: 0.001 seconds</li>
    <li>alpha: hsl 0 0 0 1</li>
  </ul>
</details>
<p>⭐ <strong>Final step: the pulse</strong></p>
<p>Let's make the circle continuously grow and shrink.</p>
<p>
  <strong>Loop Forever:</strong> Change the loop condition to <code>true</code> to create an endless
  loop.
</p>
<pre><code class="language-evy">while true
    // ...
end
</code></pre>
<p>
  <strong>Change Direction:</strong> Instead of always increasing the radius (<code>r</code>) by
  <code>0.1</code>, use a variable <code>inc</code> to control the change.
</p>
<pre><code class="language-evy">inc := 0.1  // Amount to increase/decrease the radius
while true
    r = r + inc
end
</code></pre>
<p>
  <strong>Reverse the Change:</strong> Inside the loop, check if <code>r</code> goes below 1 or
  above 45. If it does, flip the sign of <code>inc</code> to reverse the animation's direction.
</p>
<details>
  <summary>Code Hint 🧚</summary>
  <pre><code class="language-evy">inc := 0.1
while true
    if r &lt; 1 or r &gt; 45
        inc = -inc  // Reverse the increment
    end
    r = r + inc
end
</code></pre>
</details>
