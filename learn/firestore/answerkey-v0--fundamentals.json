{
  "bool-cls-easy-1-1": {
    "single": "a"
  },
  "bool-cls-easy-1-2": {
    "single": "a"
  },
  "bool-cls-easy-2-1": {
    "single": "a"
  },
  "bool-cls-easy-2-2": {
    "single": "a"
  },
  "bool-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-easy-1-1": {
    "single": "a"
  },
  "bool-lines-easy-1-2": {
    "single": "a"
  },
  "bool-lines-easy-2-1": {
    "single": "a"
  },
  "bool-lines-easy-2-2": {
    "single": "a"
  },
  "bool-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-easy-1-1": {
    "single": "a"
  },
  "bool-print-easy-1-2": {
    "single": "a"
  },
  "bool-print-easy-2-1": {
    "single": "a"
  },
  "bool-print-easy-2-2": {
    "single": "a"
  },
  "bool-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-easy-1-1": {
    "single": "a"
  },
  "bool-shape-easy-1-2": {
    "single": "a"
  },
  "bool-shape-easy-2-1": {
    "single": "a"
  },
  "bool-shape-easy-2-2": {
    "single": "a"
  },
  "bool-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-easy-1-1": {
    "single": "a"
  },
  "bool-style-easy-1-2": {
    "single": "a"
  },
  "bool-style-easy-2-1": {
    "single": "a"
  },
  "bool-style-easy-2-2": {
    "single": "a"
  },
  "bool-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-easy-1-1": {
    "single": "a"
  },
  "bool-text-easy-1-2": {
    "single": "a"
  },
  "bool-text-easy-2-1": {
    "single": "a"
  },
  "bool-text-easy-2-2": {
    "single": "a"
  },
  "bool-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "bool-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "bool-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "bool-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-easy-1-1": {
    "single": "a"
  },
  "flow-cls-easy-1-2": {
    "single": "a"
  },
  "flow-cls-easy-2-1": {
    "single": "a"
  },
  "flow-cls-easy-2-2": {
    "single": "a"
  },
  "flow-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-easy-1-1": {
    "single": "a"
  },
  "flow-lines-easy-1-2": {
    "single": "a"
  },
  "flow-lines-easy-2-1": {
    "single": "a"
  },
  "flow-lines-easy-2-2": {
    "single": "a"
  },
  "flow-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-easy-1-1": {
    "single": "a"
  },
  "flow-print-easy-1-2": {
    "single": "a"
  },
  "flow-print-easy-2-1": {
    "single": "a"
  },
  "flow-print-easy-2-2": {
    "single": "a"
  },
  "flow-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-easy-1-1": {
    "single": "a"
  },
  "flow-shape-easy-1-2": {
    "single": "a"
  },
  "flow-shape-easy-2-1": {
    "single": "a"
  },
  "flow-shape-easy-2-2": {
    "single": "a"
  },
  "flow-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-easy-1-1": {
    "single": "a"
  },
  "flow-style-easy-1-2": {
    "single": "a"
  },
  "flow-style-easy-2-1": {
    "single": "a"
  },
  "flow-style-easy-2-2": {
    "single": "a"
  },
  "flow-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-easy-1-1": {
    "single": "a"
  },
  "flow-text-easy-1-2": {
    "single": "a"
  },
  "flow-text-easy-2-1": {
    "single": "a"
  },
  "flow-text-easy-2-2": {
    "single": "a"
  },
  "flow-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "flow-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "flow-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "flow-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-easy-1-1": {
    "single": "a"
  },
  "ifs-cls-easy-1-2": {
    "single": "a"
  },
  "ifs-cls-easy-2-1": {
    "single": "a"
  },
  "ifs-cls-easy-2-2": {
    "single": "a"
  },
  "ifs-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-easy-1-1": {
    "single": "a"
  },
  "ifs-lines-easy-1-2": {
    "single": "a"
  },
  "ifs-lines-easy-2-1": {
    "single": "a"
  },
  "ifs-lines-easy-2-2": {
    "single": "a"
  },
  "ifs-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-easy-1-1": {
    "single": "a"
  },
  "ifs-print-easy-1-2": {
    "single": "a"
  },
  "ifs-print-easy-2-1": {
    "single": "a"
  },
  "ifs-print-easy-2-2": {
    "single": "a"
  },
  "ifs-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-easy-1-1": {
    "single": "a"
  },
  "ifs-shape-easy-1-2": {
    "single": "a"
  },
  "ifs-shape-easy-2-1": {
    "single": "a"
  },
  "ifs-shape-easy-2-2": {
    "single": "a"
  },
  "ifs-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-easy-1-1": {
    "single": "a"
  },
  "ifs-style-easy-1-2": {
    "single": "a"
  },
  "ifs-style-easy-2-1": {
    "single": "a"
  },
  "ifs-style-easy-2-2": {
    "single": "a"
  },
  "ifs-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-easy-1-1": {
    "single": "a"
  },
  "ifs-text-easy-1-2": {
    "single": "a"
  },
  "ifs-text-easy-2-1": {
    "single": "a"
  },
  "ifs-text-easy-2-2": {
    "single": "a"
  },
  "ifs-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "ifs-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "ifs-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "ifs-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-easy-1-1": {
    "single": "a"
  },
  "loop-cls-easy-1-2": {
    "single": "a"
  },
  "loop-cls-easy-2-1": {
    "single": "a"
  },
  "loop-cls-easy-2-2": {
    "single": "a"
  },
  "loop-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-easy-1-1": {
    "single": "a"
  },
  "loop-lines-easy-1-2": {
    "single": "a"
  },
  "loop-lines-easy-2-1": {
    "single": "a"
  },
  "loop-lines-easy-2-2": {
    "single": "a"
  },
  "loop-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-easy-1-1": {
    "single": "a"
  },
  "loop-print-easy-1-2": {
    "single": "a"
  },
  "loop-print-easy-2-1": {
    "single": "a"
  },
  "loop-print-easy-2-2": {
    "single": "a"
  },
  "loop-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-easy-1-1": {
    "single": "a"
  },
  "loop-shape-easy-1-2": {
    "single": "a"
  },
  "loop-shape-easy-2-1": {
    "single": "a"
  },
  "loop-shape-easy-2-2": {
    "single": "a"
  },
  "loop-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-easy-1-1": {
    "single": "a"
  },
  "loop-style-easy-1-2": {
    "single": "a"
  },
  "loop-style-easy-2-1": {
    "single": "a"
  },
  "loop-style-easy-2-2": {
    "single": "a"
  },
  "loop-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-easy-1-1": {
    "single": "a"
  },
  "loop-text-easy-1-2": {
    "single": "a"
  },
  "loop-text-easy-2-1": {
    "single": "a"
  },
  "loop-text-easy-2-2": {
    "single": "a"
  },
  "loop-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "loop-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "loop-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "loop-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-easy-1-1": {
    "single": "a"
  },
  "num-cls-easy-1-2": {
    "single": "a"
  },
  "num-cls-easy-2-1": {
    "single": "a"
  },
  "num-cls-easy-2-2": {
    "single": "a"
  },
  "num-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-easy-1-1": {
    "single": "a"
  },
  "num-lines-easy-1-2": {
    "single": "a"
  },
  "num-lines-easy-2-1": {
    "single": "a"
  },
  "num-lines-easy-2-2": {
    "single": "a"
  },
  "num-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-easy-1-1": {
    "single": "a"
  },
  "num-print-easy-1-2": {
    "single": "a"
  },
  "num-print-easy-2-1": {
    "single": "a"
  },
  "num-print-easy-2-2": {
    "single": "a"
  },
  "num-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-easy-1-1": {
    "single": "a"
  },
  "num-shape-easy-1-2": {
    "single": "a"
  },
  "num-shape-easy-2-1": {
    "single": "a"
  },
  "num-shape-easy-2-2": {
    "single": "a"
  },
  "num-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-easy-1-1": {
    "single": "a"
  },
  "num-style-easy-1-2": {
    "single": "a"
  },
  "num-style-easy-2-1": {
    "single": "a"
  },
  "num-style-easy-2-2": {
    "single": "a"
  },
  "num-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-easy-1-1": {
    "single": "a"
  },
  "num-text-easy-1-2": {
    "single": "a"
  },
  "num-text-easy-2-1": {
    "single": "a"
  },
  "num-text-easy-2-2": {
    "single": "a"
  },
  "num-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "num-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "num-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "num-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-easy-1-1": {
    "single": "a"
  },
  "op-cls-easy-1-2": {
    "single": "a"
  },
  "op-cls-easy-2-1": {
    "single": "a"
  },
  "op-cls-easy-2-2": {
    "single": "a"
  },
  "op-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-easy-1-1": {
    "single": "a"
  },
  "op-lines-easy-1-2": {
    "single": "a"
  },
  "op-lines-easy-2-1": {
    "single": "a"
  },
  "op-lines-easy-2-2": {
    "single": "a"
  },
  "op-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-easy-1-1": {
    "single": "a"
  },
  "op-print-easy-1-2": {
    "single": "a"
  },
  "op-print-easy-2-1": {
    "single": "a"
  },
  "op-print-easy-2-2": {
    "single": "a"
  },
  "op-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-easy-1-1": {
    "single": "a"
  },
  "op-shape-easy-1-2": {
    "single": "a"
  },
  "op-shape-easy-2-1": {
    "single": "a"
  },
  "op-shape-easy-2-2": {
    "single": "a"
  },
  "op-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-easy-1-1": {
    "single": "a"
  },
  "op-style-easy-1-2": {
    "single": "a"
  },
  "op-style-easy-2-1": {
    "single": "a"
  },
  "op-style-easy-2-2": {
    "single": "a"
  },
  "op-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-easy-1-1": {
    "single": "a"
  },
  "op-text-easy-1-2": {
    "single": "a"
  },
  "op-text-easy-2-1": {
    "single": "a"
  },
  "op-text-easy-2-2": {
    "single": "a"
  },
  "op-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "op-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "op-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "op-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-easy-1-1": {
    "single": "a"
  },
  "seq-cls-easy-1-2": {
    "single": "a"
  },
  "seq-cls-easy-2-1": {
    "single": "a"
  },
  "seq-cls-easy-2-2": {
    "single": "a"
  },
  "seq-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-easy-1-1": {
    "single": "a"
  },
  "seq-line-easy-1-2": {
    "single": "a"
  },
  "seq-line-easy-2-1": {
    "single": "a"
  },
  "seq-line-easy-2-2": {
    "single": "a"
  },
  "seq-line-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-line-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-line-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-line-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-line-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-easy-1-1": {
    "single": "a"
  },
  "seq-print-easy-1-2": {
    "single": "a"
  },
  "seq-print-easy-2-1": {
    "single": "a"
  },
  "seq-print-easy-2-2": {
    "single": "a"
  },
  "seq-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-easy-1-1": {
    "single": "a"
  },
  "seq-shape-easy-1-2": {
    "single": "a"
  },
  "seq-shape-easy-2-1": {
    "single": "a"
  },
  "seq-shape-easy-2-2": {
    "single": "a"
  },
  "seq-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-easy-1-1": {
    "single": "a"
  },
  "seq-style-easy-1-2": {
    "single": "a"
  },
  "seq-style-easy-2-1": {
    "single": "a"
  },
  "seq-style-easy-2-2": {
    "single": "a"
  },
  "seq-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-easy-1-1": {
    "single": "a"
  },
  "seq-text-easy-1-2": {
    "single": "a"
  },
  "seq-text-easy-2-1": {
    "single": "a"
  },
  "seq-text-easy-2-2": {
    "single": "a"
  },
  "seq-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "seq-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "seq-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "seq-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-easy-1-1": {
    "single": "a"
  },
  "string-cls-easy-1-2": {
    "single": "a"
  },
  "string-cls-easy-2-1": {
    "single": "a"
  },
  "string-cls-easy-2-2": {
    "single": "a"
  },
  "string-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-easy-1-1": {
    "single": "a"
  },
  "string-lines-easy-1-2": {
    "single": "a"
  },
  "string-lines-easy-2-1": {
    "single": "a"
  },
  "string-lines-easy-2-2": {
    "single": "a"
  },
  "string-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-easy-1-1": {
    "single": "a"
  },
  "string-print-easy-1-2": {
    "single": "a"
  },
  "string-print-easy-2-1": {
    "single": "a"
  },
  "string-print-easy-2-2": {
    "single": "a"
  },
  "string-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-easy-1-1": {
    "single": "a"
  },
  "string-shape-easy-1-2": {
    "single": "a"
  },
  "string-shape-easy-2-1": {
    "single": "a"
  },
  "string-shape-easy-2-2": {
    "single": "a"
  },
  "string-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-easy-1-1": {
    "single": "a"
  },
  "string-style-easy-1-2": {
    "single": "a"
  },
  "string-style-easy-2-1": {
    "single": "a"
  },
  "string-style-easy-2-2": {
    "single": "a"
  },
  "string-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-easy-1-1": {
    "single": "a"
  },
  "string-text-easy-1-2": {
    "single": "a"
  },
  "string-text-easy-2-1": {
    "single": "a"
  },
  "string-text-easy-2-2": {
    "single": "a"
  },
  "string-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "string-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "string-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "string-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-easy-1-1": {
    "single": "a"
  },
  "type-cls-easy-1-2": {
    "single": "a"
  },
  "type-cls-easy-2-1": {
    "single": "a"
  },
  "type-cls-easy-2-2": {
    "single": "a"
  },
  "type-cls-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-cls-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-cls-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-cls-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-cls-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-easy-1-1": {
    "single": "a"
  },
  "type-lines-easy-1-2": {
    "single": "a"
  },
  "type-lines-easy-2-1": {
    "single": "a"
  },
  "type-lines-easy-2-2": {
    "single": "a"
  },
  "type-lines-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-lines-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-lines-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-lines-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-lines-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-easy-1-1": {
    "single": "a"
  },
  "type-print-easy-1-2": {
    "single": "a"
  },
  "type-print-easy-2-1": {
    "single": "a"
  },
  "type-print-easy-2-2": {
    "single": "a"
  },
  "type-print-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-print-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-print-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-print-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-print-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-easy-1-1": {
    "single": "a"
  },
  "type-shape-easy-1-2": {
    "single": "a"
  },
  "type-shape-easy-2-1": {
    "single": "a"
  },
  "type-shape-easy-2-2": {
    "single": "a"
  },
  "type-shape-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-shape-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-shape-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-shape-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-shape-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-easy-1-1": {
    "single": "a"
  },
  "type-style-easy-1-2": {
    "single": "a"
  },
  "type-style-easy-2-1": {
    "single": "a"
  },
  "type-style-easy-2-2": {
    "single": "a"
  },
  "type-style-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-style-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-style-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-style-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-style-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-easy-1-1": {
    "single": "a"
  },
  "type-text-easy-1-2": {
    "single": "a"
  },
  "type-text-easy-2-1": {
    "single": "a"
  },
  "type-text-easy-2-2": {
    "single": "a"
  },
  "type-text-easy-3-1": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-text-easy-3-2": {
    "program": "while true\n    print \"╔════════════════════════╗\"\n    print \"║ Guess my number (1-10) ║\"\n    print \"╚════════════════════════╝\"\n\n    n := 1 + (rand 10)\n    guess := readn\n\n    while guess != n\n        if guess \u003c n\n            print guess \"Guess higher.\"\n        else\n            print guess \"Guess lower.\"\n        end\n        guess = readn\n    end\n    print guess \"You got it 🥳.\"\n    sleep 2\n    cls\nend\n\n// readn reads a number.\n// If the input is not a number readn\n// prints an error and repeats prompt.\nfunc readn:num\n    while true\n        str := read\n        n := str2num str\n        if !err\n            return n\n        end\n        print \"💣 '\"+str+\"'is not a number. Try again.\"\n    end\n    return -1\nend"
  },
  "type-text-easy-4-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-easy-4-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-easy-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-easy-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-easy-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-1-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-1-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-1-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-1-4": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-2-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-2-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-3-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-3-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-3-3": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-3-4": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-3-5": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-4-1": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-4-2": {
    "multi": [
      "a",
      "b",
      "c"
    ]
  },
  "type-text-medium-5-1": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-5-2": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  },
  "type-text-medium-5-3": {
    "text": [
      "Imagine you're following a recipe to make slime.  In computer programming, things work kind of like ",
      "that!  booluential execution means the computer follows the instructions in your code one by one, just like you follow the steps in the recipe."
    ]
  }
}
